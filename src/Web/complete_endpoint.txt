// Complete database test endpoint code:
app.MapGet("/api/test-db", async () => {
    try {
        var configPath = Path.Combine(Directory.GetCurrentDirectory(), "dbconfig.json");
        if (!File.Exists(configPath)) {
            return Results.Json(new { success = false, error = "dbconfig.json not found" });
        }
        
        var configJson = await File.ReadAllTextAsync(configPath);
        var config = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, object>>(configJson);
        
        var connectionString = $"Host={config["Host"]};Database={config["Database"]};Username={config["Username"]};Password={config["Password"]};Port={config.GetValueOrDefault("Port", 5432)}";
        
        using var connection = new Npgsql.NpgsqlConnection(connectionString);
        await connection.OpenAsync();
        
        var cmd = new Npgsql.NpgsqlCommand("SELECT version()", connection);
        var version = await cmd.ExecuteScalarAsync();
        
        return Results.Json(new { 
            success = true, 
            message = "Connected successfully",
            version = version?.ToString(),
            config = new {
                host = config["Host"],
                database = config["Database"],
                username = config["Username"],
                port = config.GetValueOrDefault("Port", 5432)
            }
        });
    } catch (Exception ex) {
        return Results.Json(new { success = false, error = ex.Message, details = ex.ToString() });
    }
});