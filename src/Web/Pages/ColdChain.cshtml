@page
@model ColdChainModel

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-thermometer-half text-primary"></i> Cold Chain Monitoring</h2>
    <div>
        <span class="badge bg-success">IoT Connected</span>
        <button class="btn btn-primary" onclick="refreshSensors()">
            <i class="fas fa-sync"></i> Refresh
        </button>
    </div>
</div>

<div class="row mb-4">
    @foreach(var sensor in Model.TemperatureSensors)
    {
        <div class="col-md-4 mb-3">
            <div class="card @(sensor.temperature > 8 ? "border-danger" : "border-success")">
                <div class="card-header">
                    <h6>@sensor.location</h6>
                </div>
                <div class="card-body text-center">
                    <h2 class="@(sensor.temperature > 8 ? "text-danger" : "text-success")">
                        @sensor.temperature.ToString("N1")°C
                    </h2>
                    <p class="text-muted">@sensor.last_reading.ToString("HH:mm")</p>
                    @if(sensor.temperature > 8)
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle"></i> Temperature Alert!
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

<div class="card">
    <div class="card-header">
        <h5>Temperature History</h5>
    </div>
    <div class="card-body">
        <canvas id="temperatureChart" height="100"></canvas>
    </div>
</div>

<script>
const ctx = document.getElementById('temperatureChart').getContext('2d');
const chart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: @Html.Raw(Json.Serialize(Model.ChartLabels)),
        datasets: [{
            label: 'Storage Temperature',
            data: @Html.Raw(Json.Serialize(Model.TemperatureData)),
            borderColor: 'rgb(75, 192, 192)',
            tension: 0.1
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: false,
                min: 0,
                max: 15,
                title: {
                    display: true,
                    text: 'Temperature (°C)'
                }
            }
        }
    }
});

function refreshSensors() {
    location.reload();
}
</script>