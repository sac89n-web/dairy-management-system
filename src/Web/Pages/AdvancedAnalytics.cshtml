@page
@model AdvancedAnalyticsModel

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><i class="fas fa-chart-line text-primary"></i> Advanced Analytics & BI</h2>
        <p class="text-muted">Real-time insights, predictions, and business intelligence</p>
    </div>
    <div>
        <select class="form-select me-2" id="branchFilter" onchange="filterByBranch(this.value)" style="width: 200px; display: inline-block;">
            <option value="">All Branches</option>
            @foreach(var branch in Model.Branches)
            {
                <option value="@branch.Id">@branch.BranchName</option>
            }
        </select>
        <button class="btn btn-primary" onclick="refreshDashboard()">
            <i class="fas fa-sync"></i> Refresh
        </button>
    </div>
</div>

<!-- KPI Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-gradient-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Total Collection</h5>
                        <h3>@Model.Dashboard.TotalMilkCollection.ToString("N0")L</h3>
                        <small><i class="fas fa-arrow-up"></i> +12% from yesterday</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-tint fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-gradient-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Quality Score</h5>
                        <h3>@Model.Dashboard.AverageFatPercentage.ToString("F1")%</h3>
                        <small><i class="fas fa-arrow-up"></i> +0.3% this week</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-award fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-gradient-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Revenue</h5>
                        <h3>₹@Model.Dashboard.TotalRevenue.ToString("N0")</h3>
                        <small><i class="fas fa-arrow-up"></i> +8% this month</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-rupee-sign fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-gradient-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Efficiency</h5>
                        <h3>@Model.Dashboard.CollectionEfficiency.ToString("F1")%</h3>
                        <small><i class="fas fa-arrow-up"></i> +2% improvement</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-chart-pie fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="row mb-4">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-chart-area"></i> Production Trends</h5>
            </div>
            <div class="card-body">
                <canvas id="productionChart" height="80"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-brain"></i> AI Predictions</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label">Quality Forecast</label>
                    <div class="d-flex justify-content-between">
                        <span>Tomorrow</span>
                        <span class="fw-bold text-success">@Model.QualityPrediction.PredictedValue.ToString("F1")%</span>
                    </div>
                    <div class="progress mb-2">
                        <div class="progress-bar bg-success" style="width: @(Model.QualityPrediction.ConfidenceScore * 100)%"></div>
                    </div>
                    <small class="text-muted">Confidence: @(Model.QualityPrediction.ConfidenceScore * 100).ToString("F0")%</small>
                </div>
                <div class="mb-3">
                    <label class="form-label">Price Forecast</label>
                    <div class="d-flex justify-content-between">
                        <span>Next Week</span>
                        <span class="fw-bold text-info">₹@Model.PriceForecast.PredictedValue.ToString("F0")/L</span>
                    </div>
                    <div class="progress mb-2">
                        <div class="progress-bar bg-info" style="width: @(Model.PriceForecast.ConfidenceScore * 100)%"></div>
                    </div>
                    <small class="text-muted">Confidence: @(Model.PriceForecast.ConfidenceScore * 100).ToString("F0")%</small>
                </div>
                <button class="btn btn-outline-primary btn-sm w-100" onclick="showPredictionDetails()">
                    <i class="fas fa-eye"></i> View Details
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Branch Performance & Fraud Alerts -->
<div class="row mb-4">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-building"></i> Branch Performance</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Branch</th>
                                <th>Collection</th>
                                <th>Revenue</th>
                                <th>Farmers</th>
                                <th>Efficiency</th>
                                <th>Trend</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var branch in Model.Dashboard.BranchPerformance)
                            {
                                <tr>
                                    <td><strong>@branch.BranchName</strong></td>
                                    <td>@branch.Collection.ToString("N0")L</td>
                                    <td>₹@branch.Revenue.ToString("N0")</td>
                                    <td>@branch.FarmerCount</td>
                                    <td>
                                        <span class="badge @(branch.Efficiency >= 90 ? "bg-success" : branch.Efficiency >= 75 ? "bg-warning" : "bg-danger")">
                                            @branch.Efficiency.ToString("F1")%
                                        </span>
                                    </td>
                                    <td>
                                        <i class="fas fa-arrow-up text-success"></i>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-shield-alt text-danger"></i> Fraud Alerts</h5>
            </div>
            <div class="card-body">
                @foreach(var alert in Model.FraudAlerts.Take(3))
                {
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <strong>@alert.AlertType.Replace("_", " ").ToUpper()</strong><br>
                        <small>@alert.AlertDetails</small><br>
                        <small class="text-muted">Risk: @(alert.RiskScore * 100).ToString("F0")%</small>
                        <button type="button" class="btn-close" onclick="dismissAlert(@alert.Id)"></button>
                    </div>
                }
                <button class="btn btn-outline-danger btn-sm w-100" onclick="showAllAlerts()">
                    <i class="fas fa-exclamation-triangle"></i> View All Alerts (@Model.FraudAlerts.Count)
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Advanced Analytics Tools -->
<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-microscope"></i> Quality Analysis</h5>
            </div>
            <div class="card-body">
                <canvas id="qualityChart" height="100"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-money-bill-trend-up"></i> Revenue Analysis</h5>
            </div>
            <div class="card-body">
                <canvas id="revenueChart" height="100"></canvas>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// Production Trends Chart
const productionCtx = document.getElementById('productionChart').getContext('2d');
new Chart(productionCtx, {
    type: 'line',
    data: {
        labels: [@Html.Raw(string.Join(",", Model.Dashboard.ProductionTrend.Select(t => $"'{t.Label}'")))],
        datasets: [{
            label: 'Milk Collection (L)',
            data: [@string.Join(",", Model.Dashboard.ProductionTrend.Select(t => t.Value))],
            borderColor: '#007bff',
            backgroundColor: 'rgba(0, 123, 255, 0.1)',
            tension: 0.4,
            fill: true
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: { display: false }
        },
        scales: {
            y: { beginAtZero: true }
        }
    }
});

// Quality Trends Chart
const qualityCtx = document.getElementById('qualityChart').getContext('2d');
new Chart(qualityCtx, {
    type: 'doughnut',
    data: {
        labels: ['Excellent (>4.5%)', 'Good (4.0-4.5%)', 'Average (3.5-4.0%)', 'Poor (<3.5%)'],
        datasets: [{
            data: [45, 35, 15, 5],
            backgroundColor: ['#28a745', '#17a2b8', '#ffc107', '#dc3545']
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: { position: 'bottom' }
        }
    }
});

// Revenue Analysis Chart
const revenueCtx = document.getElementById('revenueChart').getContext('2d');
new Chart(revenueCtx, {
    type: 'bar',
    data: {
        labels: [@Html.Raw(string.Join(",", Model.Dashboard.RevenueTrend.Select(t => $"'{t.Label}'")))],
        datasets: [{
            label: 'Revenue (₹)',
            data: [@string.Join(",", Model.Dashboard.RevenueTrend.Select(t => t.Value))],
            backgroundColor: '#28a745',
            borderRadius: 4
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: { display: false }
        },
        scales: {
            y: { beginAtZero: true }
        }
    }
});

function filterByBranch(branchId) {
    const url = branchId ? `?branchId=${branchId}` : '';
    window.location.href = '/AdvancedAnalytics' + url;
}

function refreshDashboard() {
    location.reload();
}

function showPredictionDetails() {
    alert('Detailed prediction analysis:\n\nQuality Prediction Model v1.2.3\nBased on: Weather, Feed Quality, Farmer History\n\nPrice Forecast Model v2.1.0\nBased on: Market Trends, Seasonal Patterns, Supply-Demand');
}

function dismissAlert(alertId) {
    // API call to dismiss alert
    console.log('Dismissing alert:', alertId);
}

function showAllAlerts() {
    window.location.href = '/FraudAlerts';
}

// Auto-refresh every 5 minutes
setInterval(() => {
    location.reload();
}, 300000);
</script>