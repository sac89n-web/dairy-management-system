@page
@model SubscriptionsModel

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-calendar-check text-primary"></i> Subscription Management</h2>
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addSubscriptionModal">
        <i class="fas fa-plus"></i> Add Subscription
    </button>
</div>

<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <h5>Active Subscriptions</h5>
                <h3>@Model.ActiveSubscriptions</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <h5>Today's Deliveries</h5>
                <h3>@Model.TodayDeliveries</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <h5>Pending Deliveries</h5>
                <h3>@Model.PendingDeliveries</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <h5>Monthly Revenue</h5>
                <h3>@Model.MonthlyRevenue.ToString("C")</h3>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5>Customer Subscriptions</h5>
    </div>
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>Customer</th>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Frequency</th>
                    <th>Next Delivery</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var subscription in Model.Subscriptions)
                {
                    <tr>
                        <td>@subscription.customer_name</td>
                        <td>@subscription.product_name</td>
                        <td>@subscription.quantity @subscription.unit</td>
                        <td>@subscription.frequency</td>
                        <td>@subscription.next_delivery_date.ToString("dd/MM/yyyy")</td>
                        <td>
                            <span class="badge @(subscription.status == "Active" ? "bg-success" : "bg-secondary")">
                                @subscription.status
                            </span>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-success" onclick="deliverNow(@subscription.id)">Deliver</button>
                            <button class="btn btn-sm btn-warning" onclick="pauseSubscription(@subscription.id)">Pause</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Add Subscription Modal -->
<div class="modal fade" id="addSubscriptionModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="AddSubscription">
                <div class="modal-header">
                    <h5>Add New Subscription</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Customer</label>
                        <select class="form-control" name="CustomerId" required>
                            <option value="">Select Customer</option>
                            @foreach(var customer in Model.Customers)
                            {
                                <option value="@customer.id">@customer.name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Product</label>
                        <select class="form-control" name="ProductId" required>
                            <option value="">Select Product</option>
                            @foreach(var product in Model.Products)
                            {
                                <option value="@product.id">@product.name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Quantity</label>
                        <input type="number" step="0.1" min="0.1" class="form-control" name="Quantity" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Frequency</label>
                        <select class="form-control" name="Frequency" required>
                            <option value="Daily">Daily</option>
                            <option value="Weekly">Weekly</option>
                            <option value="Monthly">Monthly</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Start Date</label>
                        <input type="date" class="form-control" name="StartDate" value="@DateTime.Today.ToString("yyyy-MM-dd")" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
function deliverNow(subscriptionId) {
    if(confirm('Mark as delivered today?')) {
        fetch(`/Subscriptions?handler=Deliver&id=${subscriptionId}`, { method: 'POST' })
        .then(() => location.reload());
    }
}

function pauseSubscription(subscriptionId) {
    if(confirm('Pause this subscription?')) {
        fetch(`/Subscriptions?handler=Pause&id=${subscriptionId}`, { method: 'POST' })
        .then(() => location.reload());
    }
}
</script>