@page
@model PaymentGatewayModel

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-credit-card text-primary"></i> Payment Gateway</h2>
    <div>
        <button class="btn btn-success" onclick="generateUPI()">
            <i class="fas fa-qrcode"></i> Generate UPI QR
        </button>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Today's Collections</h5>
                        <h3>₹@Model.TodayCollections.ToString("N0")</h3>
                        <small>@DateTime.Now.ToString("MMM dd, yyyy")</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-coins fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>UPI Payments</h5>
                        <h3>₹@Model.UpiPayments.ToString("N0")</h3>
                        <small>Digital transactions</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-mobile-alt fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Pending Payments</h5>
                        <h3>₹@Model.PendingPayments.ToString("N0")</h3>
                        <small>Awaiting settlement</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-clock fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Total Processed</h5>
                        <h3>₹@((Model.TodayCollections + Model.UpiPayments).ToString("N0"))</h3>
                        <small>All methods combined</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-chart-line fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-chart-bar"></i> Payment Analytics</h5>
            </div>
            <div class="card-body">
                <canvas id="paymentChart" height="80"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-percentage"></i> Payment Methods</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <div class="d-flex justify-content-between">
                        <span>UPI</span>
                        <span class="fw-bold">65%</span>
                    </div>
                    <div class="progress mb-2">
                        <div class="progress-bar bg-success" style="width: 65%"></div>
                    </div>
                </div>
                <div class="mb-3">
                    <div class="d-flex justify-content-between">
                        <span>Cash</span>
                        <span class="fw-bold">25%</span>
                    </div>
                    <div class="progress mb-2">
                        <div class="progress-bar bg-primary" style="width: 25%"></div>
                    </div>
                </div>
                <div class="mb-3">
                    <div class="d-flex justify-content-between">
                        <span>Card</span>
                        <span class="fw-bold">10%</span>
                    </div>
                    <div class="progress mb-2">
                        <div class="progress-bar bg-info" style="width: 10%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-bolt"></i> Quick Payment</h5>
            </div>
            <div class="card-body">
                <form id="paymentForm">
                    <div class="mb-3">
                        <label class="form-label">Payment Type</label>
                        <select class="form-control" id="paymentType" onchange="togglePaymentFields()">
                            <option value="farmer">Farmer Payment</option>
                            <option value="customer">Customer Payment</option>
                        </select>
                    </div>
                    <div class="mb-3" id="farmerField">
                        <label class="form-label">Farmer</label>
                        <select class="form-control" id="farmerId">
                            <option value="">Select Farmer</option>
                            @foreach(var farmer in Model.Farmers)
                            {
                                <option value="@farmer.id">@farmer.name (@farmer.code)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3" id="customerField" style="display:none;">
                        <label class="form-label">Customer</label>
                        <select class="form-control" id="customerId">
                            <option value="">Select Customer</option>
                            @foreach(var customer in Model.Customers)
                            {
                                <option value="@customer.id">@customer.name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Amount (₹)</label>
                        <input type="number" class="form-control" id="amount" step="0.01" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Payment Method</label>
                        <select class="form-control" id="paymentMethod">
                            <option value="UPI">UPI</option>
                            <option value="Card">Debit/Credit Card</option>
                            <option value="NetBanking">Net Banking</option>
                            <option value="Cash">Cash</option>
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="processPayment()">
                        <i class="fas fa-credit-card"></i> Process Payment
                    </button>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>UPI QR Scanner</h5>
            </div>
            <div class="card-body text-center">
                <div id="qrcode" style="margin: 20px auto;"></div>
                <div id="upiDetails" style="display:none;">
                    <p><strong>UPI ID:</strong> <span id="upiId">dairy@paytm</span></p>
                    <p><strong>Amount:</strong> ₹<span id="qrAmount">0</span></p>
                    <p><strong>Reference:</strong> <span id="qrReference"></span></p>
                </div>
                <button class="btn btn-success" onclick="scanUPI()" id="scanBtn">
                    <i class="fas fa-camera"></i> Scan UPI QR
                </button>
                <div id="scanResult" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>

<div class="card mt-4">
    <div class="card-header">
        <h5>Recent Transactions</h5>
    </div>
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Type</th>
                    <th>Party</th>
                    <th>Amount</th>
                    <th>Method</th>
                    <th>Status</th>
                    <th>Reference</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var transaction in Model.RecentTransactions)
                {
                    <tr>
                        <td>@transaction.created_at.ToString("HH:mm")</td>
                        <td>@transaction.payment_type</td>
                        <td>@transaction.party_name</td>
                        <td>₹@transaction.amount.ToString("N2")</td>
                        <td>
                            <span class="badge @(transaction.payment_method == "UPI" ? "bg-success" : "bg-info")">
                                @transaction.payment_method
                            </span>
                        </td>
                        <td>
                            <span class="badge @(transaction.status == "Success" ? "bg-success" : transaction.status == "Pending" ? "bg-warning" : "bg-danger")">
                                @transaction.status
                            </span>
                        </td>
                        <td>@transaction.reference_id</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.3/build/qrcode.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
function togglePaymentFields() {
    const type = document.getElementById('paymentType').value;
    document.getElementById('farmerField').style.display = type === 'farmer' ? 'block' : 'none';
    document.getElementById('customerField').style.display = type === 'customer' ? 'block' : 'none';
}

async function processPayment() {
    const formData = {
        paymentType: document.getElementById('paymentType').value,
        farmerId: document.getElementById('farmerId').value,
        customerId: document.getElementById('customerId').value,
        amount: parseFloat(document.getElementById('amount').value),
        paymentMethod: document.getElementById('paymentMethod').value
    };
    
    if (!formData.amount || formData.amount <= 0) {
        alert('Please enter a valid amount');
        return;
    }
    
    try {
        const response = await fetch('/api/payments/process', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formData)
        });
        
        if (response.ok) {
            const result = await response.json();
            if (formData.paymentMethod === 'UPI') {
                generateUPIQR(formData.amount, result.referenceId);
            } else {
                alert('Payment processed successfully!');
                location.reload();
            }
        } else {
            alert('Payment processing failed');
        }
    } catch (error) {
        alert('Error processing payment: ' + error.message);
    }
}

function generateUPI() {
    const amount = document.getElementById('amount').value;
    if (!amount) {
        alert('Please enter amount first');
        return;
    }
    generateUPIQR(amount, 'PAY' + Date.now());
}

function generateUPIQR(amount, reference) {
    const upiString = `upi://pay?pa=dairy@paytm&pn=Dairy Management&am=${amount}&cu=INR&tn=Payment for ${reference}`;
    
    document.getElementById('qrcode').innerHTML = '';
    QRCode.toCanvas(document.getElementById('qrcode'), upiString, {
        width: 200,
        height: 200
    }, function (error) {
        if (error) console.error(error);
    });
    
    document.getElementById('qrAmount').textContent = amount;
    document.getElementById('qrReference').textContent = reference;
    document.getElementById('upiDetails').style.display = 'block';
}

async function scanUPI() {
    try {
        // Check if browser supports camera
        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
            alert('Camera not supported in this browser');
            return;
        }
        
        // Request camera permission
        const stream = await navigator.mediaDevices.getUserMedia({ video: true });
        
        // Create video element for camera feed
        const video = document.createElement('video');
        video.srcObject = stream;
        video.play();
        
        // Simple QR scanner simulation (in real implementation, use a QR scanner library)
        document.getElementById('scanResult').innerHTML = `
            <div class="alert alert-info">
                <i class="fas fa-camera"></i> Camera activated. Point at UPI QR code to scan.
                <br><button class="btn btn-sm btn-secondary mt-2" onclick="stopScan()">Stop Scanning</button>
            </div>
        `;
        
        // Store video reference for cleanup
        window.currentScan = { video, stream };
        
    } catch (error) {
        alert('Camera access denied or not available');
    }
}

function stopScan() {
    if (window.currentScan) {
        window.currentScan.stream.getTracks().forEach(track => track.stop());
        document.getElementById('scanResult').innerHTML = '';
        delete window.currentScan;
    }
}

// Simulate payment status updates
setInterval(async () => {
    try {
        const response = await fetch('/api/payments/status-updates');
        if (response.ok) {
            const updates = await response.json();
            if (updates.length > 0) {
                location.reload(); // Refresh to show updated transactions
            }
        }
    } catch (error) {
        // Ignore errors for status updates
    }
}, 10000); // Check every 10 seconds

// Payment Analytics Chart
const paymentCtx = document.getElementById('paymentChart').getContext('2d');
new Chart(paymentCtx, {
    type: 'bar',
    data: {
        labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        datasets: [{
            label: 'UPI Payments',
            data: [12000, 15000, 13000, 18000, 14000, 16000, 11000],
            backgroundColor: '#28a745'
        }, {
            label: 'Cash Payments',
            data: [5000, 6000, 4500, 7000, 5500, 6500, 4000],
            backgroundColor: '#007bff'
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true,
                ticks: {
                    callback: function(value) {
                        return '₹' + value.toLocaleString();
                    }
                }
            }
        }
    }
});
</script>